server.port=8098



# google login
google.auth.url=https://oauth2.googleapis.com
google.login.url=https://accounts.google.com
google.redirect.uri=http://localhost:8098/google/login/redirect
google.client.id=698661690696-m40vqiukq5sp92p2b7o8fbofaotqmtqi.apps.googleusercontent.com
google.secret=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
google.auth.scope=profile,email,openid


# 전반적인 모든 설정을 잡아주는 파일
# DB연결 설정

# DBCP(DataBase Connection Pool) 생성해주기
# 1) driver
spring.datasource.driver-class-name= com.mysql.cj.jdbc.Driver
# 2) url
spring.datasource.url= jdbc:mysql://localhost:3307/cgi_2_230701_1
# 3) username
spring.datasource.username= cgi_2_230701_1
# 4) password
spring.datasource.password= smhrd1




# JPA 설정!! ---> No SQL
# mybatis ---> Mapper interface --> SqlSessionFactoryBean 구현체 만들기
# JPA(JDBC + API) <--> hibernate(구현체)
# - hibernate 설정해주기 (설정은 안해도 구동은 되나, 왠만하면 설정해주기!)

# 1. 어떤 DBMS 문법에 맞춰서 SQL구문을 생성할 건지 잡아주는 구간
# ---> mysql 5 version sql구문을 생성할꺼야!
spring.jpa.database-platform= org.hibernate.dialect.MySQL5Dialect
# 2. VO = Board 설정 시, 서버가 재시작할 때 마다 어떤 작업을 해줄건지 잡아주는 구간
# create -> 서버 재시작할 때마다 테이블을 다시 생성
# update -> 서버 재시작할 때마다 테이블에 변경사항이 있다면 update
spring.jpa.hibernate.ddl-auto= update
# 3. 실행되는 SQL구문의 console에 출력되게해줘
spring.jpa.show-sql= true
# 4. SQL구문을 예쁘게 출력해줘
spring.jpa.properties.hibernate.format_sql= true